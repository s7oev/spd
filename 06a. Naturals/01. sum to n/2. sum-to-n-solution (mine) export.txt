;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname |2. sum-to-n-solution (mine) export|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;; sum-to-n-starter.rkt

;   PROBLEM:
;   
;   Design a function that produces the sum of all the naturals from 0 to a given n. 
;   


;; ----------------------------------------
;; ----------LECTURE DEFINITION------------

;; Natural is one of:
;;  - 0
;;  - (add1 Natural)
;; interp. a natural number
(define N0 0)         ;0
(define N1 (add1 N0)) ;1
(define N2 (add1 N1)) ;2

#;
(define (fn-for-natural n)
  (cond [(zero? n) (...)]
        [else
         (... n
          (fn-for-natural (sub1 n)))]))

;; -----------------END--------------------
;; ----------------------------------------

;; Natural -> Natural
;; produces sum of Natural[0, n]
(check-expect (sum-to-n 0) 0)
(check-expect (sum-to-n 1) (+ 1 0))
(check-expect (sum-to-n 2) (+ 2 (+ 1 0)))

;(define (sum-to-n n) 0) ;stub

(define (sum-to-n n)
  (cond [(zero? n) 0]
        [else
         (+ n
          (sum-to-n (sub1 n)))]))