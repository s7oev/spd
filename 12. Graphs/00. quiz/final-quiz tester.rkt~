;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-reader.ss" "lang")((modname |final-quiz tester|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;; Slot is Natural
;; interp. each TA slot has a number, is the same length, and none overlap

(define-struct ta (name max avail))
;; TA is (make-ta String Natural (listof Slot))
;; interp. the TA's name, number of slots they can work, and slots they're available for
(define TA1 (make-ta "Harry"    1 (list 1   3)))
(define TA2 (make-ta "Ron"      1 (list   2 3)))
(define TA3 (make-ta "Hermione" 2 (list   2    4)))

(define TAS (list TA1 TA2 TA3))


(define-struct assignment (ta slot))
;; Assignment is (make-assignment TA Slot)
;; interp. the TA is assigned to work the slot

;; Schedule is (listof Assignment)


;; TANAssignments is (make-tana TA (listof Natural))
;; interp. the number of assignments recorded for a given user
(define-struct tana (ta assnm))

(define (count-slots s0)
  (local [;; rsf is (listof TANAssignments); the number of assignments to TAs so far
          (define (count-slots--ta assnm s rsf) 
                (count-slots--sched (merge-ta (assignment-ta assnm) rsf)))
          (define (count-slots--sched s rsf)
            (cond [(empty? s) rsf]
                  [else
                   (count-slots--ta (first s)  
                                    (rest s)
                                    rsf)]))

          ;; add one new ta to rsf
          (define (merge-ta ta rsf)
            (foldr merge-assignments rsf ta))
          ;; add one new assignment to rsf
          (define (merge-assignments ta lotana)
            (cond [(empty? lotana) (list (make-tana ta 1))]
                  [else
                   (if (string=? (ta-name ta) (ta-name (tana-ta (first lotana))))
                       (cons (make-tana ta
                                        (add1 (tana-n (first lotana))))
                             (rest lotana))
                       (cons (first lotana)
                             (merge-following ta (rest lotana))))]))]
    
    (count-slots--ta s0 empty empty empty)))