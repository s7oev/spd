;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname |2. boxify-solution (mine) export|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
(require 2htdp/image)

;; boxify-starter.rkt

; 
; PROBLEM:
; 
; Use the How to Design Functions (HtDF) recipe to design a function that consumes an image, 
; and appears to put a box around it. Note that you can do this by creating an "outline" 
; rectangle that is bigger than the image, and then using overlay to put it on top of the image. 
; For example:
; 
; (boxify (ellipse 60 30 "solid" "red")) should produce .
; 
; Remember, when we say DESIGN, we mean follow the recipe.
; 
; Leave behind commented out versions of the stub and template.
; 


;; Signature: Image -> Image
;; Purpose: produce given image with an outline around it (2 px wider and taller)

;; Stub:
;(define (boxify img) (square 10 "solid" "red"))

;; Tests and Examples:
(check-expect (boxify (ellipse 60 30 "solid" "red")) .)

(check-expect (boxify (ellipse 40 20 "solid" "red")) (overlay (ellipse 40 20 "solid" "red")
                                                              (rectangle 42 22 "outline" "black")))

;; Note about this test: the only way to find out what
;; the triangle's height will be is to simply make one.
;; A triangle with width 30 has a height of 26.
(check-expect (boxify (triangle 30 "solid" "red"))
              (overlay (triangle 30 "solid" "red")
                       (rectangle 32 28 "outline" "black")))

;; Template:
;(define (boxify img)
;  (... img))

;; Body:
(define (boxify img)
  (overlay
   img
   (rectangle (+ (image-width img) 2) (+ (image-height img) 2) "outline" "black")))

;; Pasted check-expect from the official solution
(check-expect (boxify (circle 10 "solid" "red")) 
              (overlay (rectangle 22 22 "outline" "black")
                       (circle 10 "solid" "red")))